run:
  # timeout for analysis, e.g. 30s, 3m, default is 1m
  timeout: 3m
  # exclude test files
  tests: false

linters:
  disable-all: true # 先禁用所有，默认不继承
  enable:
    # bugs/error（核心检查）
    - staticcheck # 静态分析，找潜在 bug
    - gosec # 安全性检查
    - errcheck # 未检查错误
    - govet # Go 官方 vet 检查

    # performance（性能优化）
    - prealloc # 预分配建议

    # style, formatting（风格检查）
    - gofmt
    - goconst
    - unconvert
    - misspell
    - unparam # 检测未使用的函数参数
    - tagliatelle # 检查 struct tag 格式

    # 谨慎启用的严格 linter（调整或禁用）
    - revive
    - dupl
    - ineffassign # 无效赋值
    - nakedret # 检查裸返回


linters-settings:
  gofmt:
    rewrite-rules:
      - pattern: 'interface{}'
        replacement: 'any'
      - pattern: 'a[b:len(a)]'
        replacement: 'a[b:]'

  misspell:
    locale: US

  errcheck:
    check-type-assertions: true
  dupl:
    # Tokens count to trigger issue, Default: 150
    threshold: 100
  govet:
    enable:
      - atomic
      - bools
      - nilfunc
      - printf
    disable:
      - unreachable

  revive:
    # 调整 revive 规则，减少严格性
    rules:
      - name: exported
        disabled: true  # 缺少注释
      - name: package-comments
        severity: warning  # 包注释降为警告
      - name: blank-imports
        severity: warning  # 空白导入降为警告
      - name: error-naming
        disabled: true     # 禁用错误命名检查
      - name: indent-error-flow
        disabled: true     # 禁用缩进检查
    # 忽略所有 revive 错误，仅显示警告
    severity: warning

issues:
  max-same-issues: 0
  max-issues-per-linter: 0
  exclude-use-default: false
  exclude:
    # gosec: Duplicated errcheck checks
    - G104
    - G304
    - "undefined: cli"                         # 忽略 cli 未定义错误
    - "could not import sync/atomic"
  exclude-rules:
    - path: common/retry/strategies.go      # 针对特定文件忽略
      linters:
        - gosec
    - path: database/utils/
      linters:
        - gofmt
